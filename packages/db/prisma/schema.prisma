// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userType{
  admin
  user
}


model User{
  id String @id @unique  @default(uuid())
  username String @unique
  password String 
  role userType @default(user)
  avatarId String?
  avatar   Avatar? @relation(fields: [avatarId], references: [id])
  spaces  Space[] 
}

model Avatar{
  id       String  @id @unique @default(uuid())
  imageUrl String?
  name     String?
  users    User[]
}

model Space{
  id String @id @unique @default(uuid())
  name String
  width Int
  height Int
  thumbnail String?
  creatorId String
  creator User @relation(fields: [creatorId], references: [id])
  spaceElements spaceElements[]
}

model spaceElements{
  id String @unique @default(uuid())
  elemenId String
  spaceId String
  space Space @relation(fields: [spaceId],references: [id])
  element Element @relation(fields: [elemenId], references: [id])
  x Int
  y Int
}

model Map{
  id String @id @unique @default(uuid())
  width Int
  height Int
  name String
  thumbnail String
  mapElements MapElements[]
}

model MapElements{
  id String @id @unique @default(uuid())
  mapId String
  elementId String
  x Int
  y Int
  elements Element @relation(fields: [elementId], references: [id])
  map Map @relation(fields :[mapId], references: [id])
}


model Element{
  id String @id @unique @default(uuid())
  imageUrl String
  width Int
  height Int
  static Boolean 
  mapElements MapElements[] 
  spaceElements spaceElements[]
}
